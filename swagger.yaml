tags:
  - name: user
    description: user routes
  - name: auth
    description: authentication routes

paths:
  # [GET] /user
  /user:
    get:
      tags:
        - user
      summary: Get authenticated user
      security:
        - bearerAuth: []
      responses:
        200:
          description: 'OK'
  # [POST] /auth/login
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      consumes:
        - application/x-www-form-urlencoded
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/definitions/loginUser'
      responses:
        200:
          description: 'OK'

  # [POST] /auth/register
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      consumes:
        - application/x-www-form-urlencoded
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/definitions/createUser'
      responses:
        200:
          description: 'OK'

# definitions
definitions:
  createUser:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
        description: username
      password:
        type: string
        format: password
        description: user password
      email:
        type: string
        description: user email
  loginUser:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: email
      password:
        type: string
        format: password
        description: user password

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

schemes:
  - https
  - http
