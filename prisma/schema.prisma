generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SUPERADMIN
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  username String
  password String
  role     Role

  organizations      Organization[] @relation("organizations")
  ownedOrganizations Organization[] @relation("ownedOrganizations")

  invite    Invite?     @relation(fields: [inviteId], references: [id])
  inviteId  String?
  UserToken UserToken[]

  @@index([username], type: Hash)
  @@index([email], type: Hash)
}

model UserToken {
  id           String @id @default(uuid())
  user         User   @relation(fields: [userId], references: [id])
  userId       String
  refreshToken String

  @@index([userId], type: Hash)
  @@index([refreshToken], type: Hash)
}

model Organization {
  id   String @id @default(uuid())
  name String

  users       User[] @relation("organizations")
  ownerUser   User   @relation("ownedOrganizations", fields: [ownerUserId], references: [id])
  ownerUserId String

  folders Folder[]
  files   File[]
  invites Invite[]

  @@index([ownerUserId], type: Hash)
}

model Invite {
  id             String  @id @default(uuid())
  disabled       Boolean @default(false)
  dateCreated    BigInt // Timestamp
  expirationDate BigInt // Timestamp
  usersInvited   User[]

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
}

model Folder {
  id    String @id @default(uuid())
  name  String
  files File[]

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String

  childrenFolders Folder[] @relation("FolderHierarcy")
  parent          Folder?  @relation("FolderHierarcy", fields: [parentId], references: [id], onDelete: Cascade)
  parentId        String?
}

model File {
  id       String  @id @default(uuid())
  name     String
  parentId String?
  data     String  @default("")

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String

  folder Folder? @relation(fields: [parentId], references: [id], onDelete: Cascade)
}
